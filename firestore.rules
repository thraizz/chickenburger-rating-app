rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Check if the rating data contains an image URL
    function hasImageUrl() {
      return request.resource.data.imageUrl != null && request.resource.data.imageUrl != "";
    }

    // Stores collection
    match /stores/{storeId} {
      allow read: if true;  // Anyone can read store information
      allow create: if isAuthenticated();  // Only authenticated users can create stores
      allow update: if isAuthenticated();  // Only authenticated users can update stores
      allow delete: if false;  // Prevent store deletion

      // Ratings subcollection under each store
      match /ratings/{ratingId} {
        allow read: if true;  // Anyone can read store ratings
        allow create: if isAuthenticated() 
          && (!hasImageUrl() || request.resource.data.imageUrl.size() < 500);  // Only allow one image URL of reasonable size
        allow update: if false;  // Ratings cannot be edited once submitted
        allow delete: if false;  // Ratings cannot be deleted
      }
    }

    // Ratings collection (top-level)
    match /ratings/{ratingId} {
      allow read: if true;  // Anyone can read ratings
      allow create: if isAuthenticated()
        && (!hasImageUrl() || request.resource.data.imageUrl.size() < 500);  // Only allow one image URL of reasonable size
      allow update: if false;  // Ratings cannot be edited once submitted
      allow delete: if false;  // Ratings cannot be deleted
    }
  }
}